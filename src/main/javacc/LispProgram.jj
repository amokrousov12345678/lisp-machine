options {
  STATIC = false;

}

PARSER_BEGIN(LispStatement)
package ru.nsu.fit.amdp.lisp_machine.grammar;
public class LispStatement {}
PARSER_END(LispStatement)

SKIP : {
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN : {
   < Identifier: ["a"-"z","A"-"Z","_"] ( ["a"-"z","A"-"Z","_","0"-"9"] )* >
  |
  < IntVal: ( ["0"-"9"] )+ >
  |
  < FloatVal: ( ["0"-"9"] )+ "\\." ( ["0"-"9"] )+  >
  |
  < StrVal: "\"" (~["\""])* "\"" >
}

void Identifier() :
{}
{
  <Identifier>
}

void IntVal() :
{}
{
  <IntVal>
}

void StrVal() :
{}
{
  <StrVal>
}

/** Top level production. */
void List() :
{}
{
  "(" (Identifier() | IntVal() | StrVal() | List())* ")"
}

/** Top level production. */
void getLispExpressions() :
{}
{
  (List())* <EOF>
}